import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JOptionPane;

public class GUIEventHandler{
	
	private ToDoListOperations operations;
	private int possiblePriority;
	private ToDoList currentHead;
	private ToDoList deletedHead;

	public GUIEventHandler() {
		operations = new ToDoListOperations();
		possiblePriority = 1;
		currentHead = null;
		deletedHead = null;
	}
	
	public int getSize() {
		return possiblePriority - 1;
	}
	
	public ToDoList getCurrentHead() {
		return currentHead;
	}
	
	public ToDoList getDeletedHead() {
		return deletedHead;
	}
	
	public boolean checkInputs(String desc, String prio, String month, String day) {
		boolean valid = false;
		if(desc.equals("")) {
			JOptionPane.showMessageDialog(null, "Update Description in empty !");
		}
		else if(prio.equals("")) {
			JOptionPane.showMessageDialog(null, "Priority not chosen !");
		}
		else if (isNumber(prio) == false){ 
			JOptionPane.showMessageDialog(null, "Priority not a number!");
		}
		else if (isNumber(month) == false){ 
			JOptionPane.showMessageDialog(null, "Month not a number!");
		}
		else if (isNumber(day) == false){ 
			JOptionPane.showMessageDialog(null, "Day not a number!");
		}
		else {
			valid = true;
		}
		return valid;
	}
	
	public boolean checkNums(int day, int month, int priority) {
		boolean valid = false;
		if (month < 0 || month > 12) {
			JOptionPane.showMessageDialog(null, "Not a valid month!");
		}
		else if (day < 0 || day > 31) {
			JOptionPane.showMessageDialog(null, "Not a valid date!");
		}
		else if (priority > possiblePriority) {
			JOptionPane.showMessageDialog(null, "Not a valid priority!");
		}
		else {
			valid = true;
		}
		return valid;
	}
	
	public void updateExceptionHandler(String desc, String prio, String stat) {
		if(desc.equals("")) {
			JOptionPane.showMessageDialog(null, "Update Description in empty !");
			return;
		}
		else if(prio.equals("")) {
			JOptionPane.showMessageDialog(null, "Priority not chosen !");
			return;
		}
		else if(stat.equals("")) {
			JOptionPane.showMessageDialog(null, "Status not chosen !");
			return;
		}
		else {
			// call update function
		}
		return;
	}
		
	public void completeTaskHandler(String desc, String prio, String stat) {
		// get the list object
		// perform the actions for complete task
		return;
	}
	
	public void deleteTaskHandler(String desc, String prio, String stat) {
		// get the corresponding list object
		// delete the object from the list
		// make priority changes to other list objects accordingly
		return;
	}
	
	public void addTaskHandler(String desc, String prio, String month, String day) {
		if(checkInputs(desc, prio, month, day)){
			int priority = Integer.parseInt(prio);
			int dayNum = Integer.parseInt(day);
			int monthNum = Integer.parseInt(month);
			if(checkNums(dayNum, monthNum, priority)) {
				currentHead = operations.addList(currentHead, priority, dayNum, monthNum, desc);
				possiblePriority++;
			}
		}
		return;
	}
	
	public boolean isNumber(String num) {
		boolean isNum = false;
		try { 
	        Integer.parseInt(num); 
	        isNum = true;
	    } 
		catch(NumberFormatException e) { 
	    	isNum = false;
	    } 
		return isNum;
	}
	
	public void saveTaskHandler() {
		// perform save list task
		return;
	}
	
	public void printToFileTaskHandler() {
		// perform print to file operation
		return;
	}
	
	// add function for the radio button sorting
}
